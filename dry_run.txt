helm install --values=ghost-values.yaml bitnami/ghost --generate-name --dry-run --debug >& dry_run.txt
https://www.linode.com/docs/guides/how-to-install-apps-on-kubernetes-with-helm-3/

install.go:173: [debug] Original chart version: ""
install.go:190: [debug] CHART PATH: /root/.cache/helm/repository/ghost-12.3.8.tgz

NAME: ghost-1619279553
LAST DEPLOYED: Sat Apr 24 18:52:37 2021
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
ghostEmail: email@example.com
ghostHost: ghost.example.com
ghostPassword: mySecurePassword123!!
ghostUsername: admin
mariadb.mariadbRootPassword: secretpassword

COMPUTED VALUES:
affinity: {}
allowEmptyPassword: true
args: []
command: []
common:
  exampleValue: common-chart
  global: {}
containerSecurityContext:
  enabled: false
  runAsNonRoot: true
  runAsUser: 1001
customLivenessProbe: {}
customReadinessProbe: {}
externalDatabase:
  database: bitnami_ghost
  host: localhost
  password: ""
  port: 3306
  user: bn_ghost
extraDeploy: []
extraEnvVars: []
extraEnvVarsConfigMap: null
extraEnvVarsSecret: null
extraVolumeMounts: []
extraVolumes: []
ghostBlogTitle: User's Blog
ghostEmail: email@example.com
ghostHost: ghost.example.com
ghostPassword: mySecurePassword123!!
ghostPath: /
ghostProtocol: http
ghostUsername: admin
hostAliases: []
image:
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/ghost
  tag: 3.42.4-debian-10-r0
ingress:
  annotations: {}
  apiVersion: null
  certManager: false
  enabled: false
  hostname: ghost.local
  path: /
  pathType: ImplementationSpecific
  secrets: []
  tls: false
initContainers: {}
kubeVersion: null
lifecycleHooks: {}
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 120
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
mariadb:
  architecture: standalone
  auth:
    customPasswordFiles: {}
    database: bitnami_ghost
    forcePassword: false
    password: ""
    replicationPassword: ""
    replicationUser: replicator
    rootPassword: ""
    usePasswordFiles: false
    username: bn_ghost
  clusterDomain: cluster.local
  common:
    exampleValue: common-chart
    global: {}
  commonAnnotations: {}
  commonLabels: {}
  enabled: true
  extraDeploy: []
  global: {}
  image:
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.5.9-debian-10-r0
  initdbScripts: {}
  metrics:
    annotations:
      prometheus.io/port: "9104"
      prometheus.io/scrape: "true"
    enabled: false
    extraArgs:
      primary: []
      secondary: []
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/mysqld-exporter
      tag: 0.12.1-debian-10-r359
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits: {}
      requests: {}
    serviceMonitor:
      additionalLabels: {}
      enabled: false
      honorLabels: false
      interval: 30s
  primary:
    affinity: {}
    args: []
    command: []
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    customLivenessProbe: {}
    customReadinessProbe: {}
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraFlags: ""
    extraVolumeMounts: []
    extraVolumes: []
    hostAliases: []
    initContainers: []
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    pdb:
      enabled: false
      minAvailable: 1
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: null
      hostPath: null
      selector: {}
      size: 8Gi
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits: {}
      requests: {}
    service:
      annotations: {}
      clusterIP: ""
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePort: ""
      port: 3306
      type: ClusterIP
    sidecars: []
    tolerations: []
    updateStrategy: RollingUpdate
  rbac:
    create: false
  secondary:
    affinity: {}
    args: []
    command: []
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    customLivenessProbe: {}
    customReadinessProbe: {}
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraFlags: ""
    extraVolumeMounts: []
    extraVolumes: []
    hostAliases: []
    initContainers: []
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    pdb:
      enabled: false
      minAvailable: 1
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      selector: {}
      size: 8Gi
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    replicaCount: 1
    resources:
      limits: {}
      requests: {}
    service:
      annotations: {}
      clusterIP: ""
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePort: ""
      port: 3306
      type: ClusterIP
    sidecars: []
    tolerations: []
    updateStrategy: RollingUpdate
  serviceAccount:
    annotations: {}
    create: true
  volumePermissions:
    enabled: false
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: "10"
    resources: {}
mariadb.mariadbRootPassword: secretpassword
nodeAffinityPreset:
  key: ""
  type: ""
  values: []
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  path: /bitnami
  size: 8Gi
podAffinityPreset: ""
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 3
replicaCount: 1
resources:
  limits: {}
  requests: {}
service:
  annotations: {}
  externalTrafficPolicy: Cluster
  extraPorts: []
  loadBalancerIP: null
  nodePorts:
    http: ""
  port: 80
  type: LoadBalancer
sidecars: {}
tolerations: []
updateStrategy:
  type: RollingUpdate
volumePermissions:
  image:
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: "10"
  resources:
    limits: {}
    requests: {}

HOOKS:
MANIFEST:
---
# Source: ghost/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghost-1619279553-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.5
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: ghost/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost-1619279553-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.5
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "Qkd0RzNOU0ptTw=="
  mariadb-password: "aEZjVmlZVXduMw=="
---
# Source: ghost/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost-1619279553
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-12.3.8
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
type: Opaque
data:
  ghost-password: "bXlTZWN1cmVQYXNzd29yZDEyMyEh"
---
# Source: ghost/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-1619279553-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.5
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: ghost/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ghost-1619279553
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-12.3.8
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: ghost/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-1619279553-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.5
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/component: primary
---
# Source: ghost/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-1619279553
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-12.3.8
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
  annotations:
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  loadBalancerIP: ""
  ports:
    - name: http
      port: 80
      targetPort: http
  selector: 
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: ghost-1619279553
---
# Source: ghost/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost-1619279553
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-12.3.8
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ghost
      app.kubernetes.io/instance: ghost-1619279553
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ghost
        helm.sh/chart: ghost-12.3.8
        app.kubernetes.io/instance: ghost-1619279553
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ghost
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: ghost
                    app.kubernetes.io/instance: ghost-1619279553
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      initContainers:
      containers:
        - name: ghost-1619279553
          image: docker.io/bitnami/ghost:3.42.4-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MARIADB_HOST
              value: "ghost-1619279553-mariadb"
            - name: MARIADB_PORT_NUMBER
              value: "3306"
            - name: GHOST_DATABASE_NAME
              value: "bitnami_ghost"
            - name: GHOST_DATABASE_USER
              value: "bn_ghost"
            - name: GHOST_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-1619279553-mariadb
                  key: mariadb-password
            - name: GHOST_HOST
              value: "ghost.example.com/"
            - name: GHOST_PROTOCOL
              value: "http"
            - name: GHOST_PORT_NUMBER
              value: "80"
            - name: GHOST_USERNAME
              value: "admin"
            - name: GHOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-1619279553
                  key: ghost-password
            - name: GHOST_EMAIL
              value: "email@example.com"
            - name: BLOG_TITLE
              value: "User's Blog"
          ports:
            - name: http
              containerPort: 2368
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: "ghost.example.com"
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: "ghost.example.com"
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: ghost-data
              mountPath: /bitnami/ghost
      volumes:
        - name: ghost-data
          persistentVolumeClaim:
            claimName: ghost-1619279553
---
# Source: ghost/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ghost-1619279553-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.5
    app.kubernetes.io/instance: ghost-1619279553
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: ghost-1619279553
      app.kubernetes.io/component: primary
  serviceName: ghost-1619279553-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 98f1532483adf872e258966af6899728422d807af018bd5bbfa0b982ef25487e
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-9.3.5
        app.kubernetes.io/instance: ghost-1619279553
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: ghost-1619279553-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: ghost-1619279553
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.9-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-1619279553-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "bn_ghost"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-1619279553-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "bitnami_ghost"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: ghost-1619279553-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: ghost-1619279553
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

NOTES:
1. Get the Ghost URL by running:

  echo Blog URL  : http://ghost.example.com/
  echo Admin URL : http://ghost.example.com/ghost

2. Get your Ghost login credentials by running:

  echo Email:    email@example.com
  echo Password: $(kubectl get secret --namespace default ghost-1619279553 -o jsonpath="{.data.ghost-password}" | base64 --decode)
